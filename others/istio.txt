

Download Istio:

curl -L https://istio.io/downloadIstio | sh -

Install Istio:

./istioctl install --set profile=demo -y

// Label default namespace for sidecar injection:

kubectl label namespace default istio-injection=enabled

// Deploy the sample application
kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml

// Verify productpage is working:
kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"


// Deploy the Gateway for Ingress traffic
kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml


// Check configuration
istioctl analyze

// Get the IP of the Ingress gateway
kubectl get svc istio-ingressgateway -n istio-system

// Get ingress host and port
export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].port}')

// Set gateway URL
export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT

// Verify the connection and URL:

echo "http://$GATEWAY_URL/productpage"


------------

//Install Kiali
kubectl apply -f samples/addons
kubectl rollout status deployment/kiali -n istio-system